#!/bin/bash -
project_home=/data1/warehouse
source ${project_home}/main/cluster.ini ${project_home}

TASK_NAME="$@"

if [ -z "${TASK_NAME}" ]; then
	echo "TASK_NAME can not be null"
	exit 1
fi

HDFS_RECOMPUTE_TARGET="/production/di/routine/recompute"
LOCAL_RECOMPUTE_TARGET="${TARGET_HOME}/recompute"
HISTORY_AR=${RESOURCE_HOME}/history

ST_HBASE_TASK_BASE_HOME=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}
ST_HBASE_EXPORT_FINAL_MERGED_RESULT=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/hbase_export_final_merged_result
ST_HBASE_EXPORT_INCREMENTAL=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/hbase_export_incremental
ST_HBASE_EXPORT_FIELDS_COMPARE_SNAPSHOT=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/hbase_export_fields_compare_snapshot
ST_HBASE_MERGE_RECOMPUTE_RESULT=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/hbase_merge_recompute_result
ST_HBASE_SYNC_RECOMPUTE_RESULT=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/hbase_sync_recompute_result

ST_RECOMPUTE_VIA_DA_EVA=${LOCAL_RECOMPUTE_TARGET}/${TASK_NAME}/recompute_via_da_eva
ST_RECOMPUTE_VIA_MPR=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/recompute_via_mpr

ST_TRANS_BACK_OUTTER_RESULT=${HDFS_RECOMPUTE_TARGET}/${TASK_NAME}/trans_back_outter_result
ST_TRANS_FINAL_MERGED_DATA=${LOCAL_RECOMPUTE_TARGET}/${TASK_NAME}/trans_final_merged_data
ST_TRANS_INCREMENTAL=${LOCAL_RECOMPUTE_TARGET}/${TASK_NAME}/trans_incremental
ST_TRANS_MPR_RECOMPUTE_RESULT=${LOCAL_RECOMPUTE_TARGET}/${TASK_NAME}/trans_mpr_recompute_result

HDFS_SELECTED_PUSH_TARGET=/production/di/routine/recompute
ST_PUSH_RESULT=${HDFS_SELECTED_PUSH_TARGET}/${TASK_NAME}
ST_PUSH_ATTRIBUTE_FIELD_RESULT=${ST_PUSH_RESULT}/attr_da_eva
ST_PUSH_ATTRIBUTE_FIELD_RESULT_MPR=${ST_PUSH_RESULT}/attr_mpr
ST_PUSH_MERGED_FIELD_RESULT=${ST_PUSH_RESULT}/merged

MERGE_QI_VALID="11"

#UTIL FUNCTION DEFINE
function r_log() {
	msg="$@"
	shift
	log_date=`date +'%Y-%m-%d_%H:%M:%S'`
	CURR_HOST=`hostname -i`
	echo "[${log_date} @ ${CURR_HOST}]:${msg}"
}

function task_existence_check() {
	BCMD_HADOOP="${SH_CDH4}/bin-mapreduce1/hadoop"
	cmd="${BCMD_HADOOP} fs -ls ${HDFS_RECOMPUTE_TARGET} 2>/dev/null | grep ${ST_HBASE_TASK_BASE_HOME}"
	ls_result=`eval ${cmd}`
	if echo "${ls_result}" | grep "${ST_HBASE_TASK_BASE_HOME}" > /dev/null; then
		msg="[hbase_task_initialization]:Related task name [${task_name}] has been already"
		msg="${msg} existed under hdfs:${HDFS_RECOMPUTE_TARGET}/"
		r_log "${msg}"
		exit 1
	fi
}
