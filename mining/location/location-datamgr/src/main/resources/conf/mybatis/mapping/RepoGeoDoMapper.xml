<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yunrang.location.datamgr.mysql.mapper.RepoGeoDoMapper" >
  <resultMap id="BaseResultMap" type="com.yunrang.location.datamgr.mysql.model.RepoGeoDo" >
    <id column="geo_id" property="geoId" jdbcType="INTEGER" />
    <result column="origin_geo_type" property="originGeoType" jdbcType="INTEGER" />
    <result column="origin_longitude" property="originLongitude" jdbcType="DOUBLE" />
    <result column="origin_latitude" property="originLatitude" jdbcType="DOUBLE" />
    <result column="adjust_geo_type" property="adjustGeoType" jdbcType="INTEGER" />
    <result column="adjust_longitude" property="adjustLongitude" jdbcType="DOUBLE" />
    <result column="adjust_latitude" property="adjustLatitude" jdbcType="DOUBLE" />
    <result column="poi_id" property="poiId" jdbcType="INTEGER" />
    <result column="tuple_status" property="tupleStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    geo_id, origin_geo_type, origin_longitude, origin_latitude, adjust_geo_type, adjust_longitude, 
    adjust_latitude, poi_id, tuple_status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDoCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from repo_geo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from repo_geo
    where geo_id = #{geoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from repo_geo
    where geo_id = #{geoId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDoCriteria" >
    delete from repo_geo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDo" useGeneratedKeys="true" keyProperty="geoId">
    insert into repo_geo (geo_id, origin_geo_type, origin_longitude, 
      origin_latitude, adjust_geo_type, adjust_longitude, 
      adjust_latitude, poi_id, tuple_status
      )
    values (#{geoId,jdbcType=INTEGER}, #{originGeoType,jdbcType=INTEGER}, #{originLongitude,jdbcType=DOUBLE}, 
      #{originLatitude,jdbcType=DOUBLE}, #{adjustGeoType,jdbcType=INTEGER}, #{adjustLongitude,jdbcType=DOUBLE}, 
      #{adjustLatitude,jdbcType=DOUBLE}, #{poiId,jdbcType=INTEGER}, #{tupleStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDo" useGeneratedKeys="true" keyProperty="geoId">
    insert into repo_geo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="geoId != null" >
        geo_id,
      </if>
      <if test="originGeoType != null" >
        origin_geo_type,
      </if>
      <if test="originLongitude != null" >
        origin_longitude,
      </if>
      <if test="originLatitude != null" >
        origin_latitude,
      </if>
      <if test="adjustGeoType != null" >
        adjust_geo_type,
      </if>
      <if test="adjustLongitude != null" >
        adjust_longitude,
      </if>
      <if test="adjustLatitude != null" >
        adjust_latitude,
      </if>
      <if test="poiId != null" >
        poi_id,
      </if>
      <if test="tupleStatus != null" >
        tuple_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="geoId != null" >
        #{geoId,jdbcType=INTEGER},
      </if>
      <if test="originGeoType != null" >
        #{originGeoType,jdbcType=INTEGER},
      </if>
      <if test="originLongitude != null" >
        #{originLongitude,jdbcType=DOUBLE},
      </if>
      <if test="originLatitude != null" >
        #{originLatitude,jdbcType=DOUBLE},
      </if>
      <if test="adjustGeoType != null" >
        #{adjustGeoType,jdbcType=INTEGER},
      </if>
      <if test="adjustLongitude != null" >
        #{adjustLongitude,jdbcType=DOUBLE},
      </if>
      <if test="adjustLatitude != null" >
        #{adjustLatitude,jdbcType=DOUBLE},
      </if>
      <if test="poiId != null" >
        #{poiId,jdbcType=INTEGER},
      </if>
      <if test="tupleStatus != null" >
        #{tupleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDoCriteria" resultType="java.lang.Integer" >
    select count(*) from repo_geo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update repo_geo
    <set >
      <if test="record.geoId != null" >
        geo_id = #{record.geoId,jdbcType=INTEGER},
      </if>
      <if test="record.originGeoType != null" >
        origin_geo_type = #{record.originGeoType,jdbcType=INTEGER},
      </if>
      <if test="record.originLongitude != null" >
        origin_longitude = #{record.originLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.originLatitude != null" >
        origin_latitude = #{record.originLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.adjustGeoType != null" >
        adjust_geo_type = #{record.adjustGeoType,jdbcType=INTEGER},
      </if>
      <if test="record.adjustLongitude != null" >
        adjust_longitude = #{record.adjustLongitude,jdbcType=DOUBLE},
      </if>
      <if test="record.adjustLatitude != null" >
        adjust_latitude = #{record.adjustLatitude,jdbcType=DOUBLE},
      </if>
      <if test="record.poiId != null" >
        poi_id = #{record.poiId,jdbcType=INTEGER},
      </if>
      <if test="record.tupleStatus != null" >
        tuple_status = #{record.tupleStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update repo_geo
    set geo_id = #{record.geoId,jdbcType=INTEGER},
      origin_geo_type = #{record.originGeoType,jdbcType=INTEGER},
      origin_longitude = #{record.originLongitude,jdbcType=DOUBLE},
      origin_latitude = #{record.originLatitude,jdbcType=DOUBLE},
      adjust_geo_type = #{record.adjustGeoType,jdbcType=INTEGER},
      adjust_longitude = #{record.adjustLongitude,jdbcType=DOUBLE},
      adjust_latitude = #{record.adjustLatitude,jdbcType=DOUBLE},
      poi_id = #{record.poiId,jdbcType=INTEGER},
      tuple_status = #{record.tupleStatus,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDo" >
    update repo_geo
    <set >
      <if test="originGeoType != null" >
        origin_geo_type = #{originGeoType,jdbcType=INTEGER},
      </if>
      <if test="originLongitude != null" >
        origin_longitude = #{originLongitude,jdbcType=DOUBLE},
      </if>
      <if test="originLatitude != null" >
        origin_latitude = #{originLatitude,jdbcType=DOUBLE},
      </if>
      <if test="adjustGeoType != null" >
        adjust_geo_type = #{adjustGeoType,jdbcType=INTEGER},
      </if>
      <if test="adjustLongitude != null" >
        adjust_longitude = #{adjustLongitude,jdbcType=DOUBLE},
      </if>
      <if test="adjustLatitude != null" >
        adjust_latitude = #{adjustLatitude,jdbcType=DOUBLE},
      </if>
      <if test="poiId != null" >
        poi_id = #{poiId,jdbcType=INTEGER},
      </if>
      <if test="tupleStatus != null" >
        tuple_status = #{tupleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where geo_id = #{geoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yunrang.location.datamgr.mysql.model.RepoGeoDo" >
    update repo_geo
    set origin_geo_type = #{originGeoType,jdbcType=INTEGER},
      origin_longitude = #{originLongitude,jdbcType=DOUBLE},
      origin_latitude = #{originLatitude,jdbcType=DOUBLE},
      adjust_geo_type = #{adjustGeoType,jdbcType=INTEGER},
      adjust_longitude = #{adjustLongitude,jdbcType=DOUBLE},
      adjust_latitude = #{adjustLatitude,jdbcType=DOUBLE},
      poi_id = #{poiId,jdbcType=INTEGER},
      tuple_status = #{tupleStatus,jdbcType=INTEGER}
    where geo_id = #{geoId,jdbcType=INTEGER}
  </update>
</mapper>